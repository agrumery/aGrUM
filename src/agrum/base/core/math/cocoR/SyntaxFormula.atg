/****************************************************************************
 *   This file is part of the aGrUM/pyAgrum library.                        *
 *                                                                          *
 *   Copyright (c) 2005-2025 by                                             *
 *       - Pierre-Henri WUILLEMIN(_at_LIP6)                                 *
 *       - Christophe GONZALES(_at_AMU)                                     *
 *                                                                          *
 *   The aGrUM/pyAgrum library is free software; you can redistribute it    *
 *   and/or modify it under the terms of either :                           *
 *                                                                          *
 *    - the GNU Lesser General Public License as published by               *
 *      the Free Software Foundation, either version 3 of the License,      *
 *      or (at your option) any later version,                              *
 *    - the MIT license (MIT),                                              *
 *    - or both in dual license, as here.                                   *
 *                                                                          *
 *   (see https://agrum.gitlab.io/articles/dual-licenses-lgplv3mit.html)    *
 *                                                                          *
 *   This aGrUM/pyAgrum library is distributed in the hope that it will be  *
 *   useful, but WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,          *
 *   INCLUDING BUT NOT LIMITED TO THE WARRANTIES MERCHANTABILITY or FITNESS *
 *   FOR A PARTICULAR PURPOSE  AND NONINFRINGEMENT. IN NO EVENT SHALL THE   *
 *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER *
 *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,        *
 *   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR  *
 *   OTHER DEALINGS IN THE SOFTWARE.                                        *
 *                                                                          *
 *   See LICENCES for more details.                                         *
 *                                                                          *
 *   SPDX-FileCopyrightText: Copyright 2005-2025                            *
 *       - Pierre-Henri WUILLEMIN(_at_LIP6)                                 *
 *       - Christophe GONZALES(_at_AMU)                                     *
 *   SPDX-License-Identifier: LGPL-3.0-or-later OR MIT                      *
 *                                                                          *
 *   Contact  : info_at_agrum_dot_org                                       *
 *   homepage : http://agrum.gitlab.io                                      *
 *   gitlab   : https://gitlab.com/agrumery/agrum                           *
 *                                                                          *
 ****************************************************************************/






// =============================================================================
//                               HEADERS
// =============================================================================

#include <algorithm>
#include <fstream>
#include <list>
#include <memory>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

#include <agrum/base/core/math/math_utils.h>
#include <agrum/base/core/math/formula.h>

// =============================================================================
//                             PARSER
// =============================================================================

COMPILER EVAL

private:
  gum::Formula* _formula_;

public:
  void formula( gum::Formula* f ) {
    _formula_ = f;
  }

  gum::Formula& formula() {
    return *_formula_;
  }

  const gum::Formula& formula() const {
    return *_formula_;
  }

// =============================================================================
//                              SCANNER RULES
// =============================================================================

//________________________
CHARACTERS
letter = 'A'..'Z' + 'a'..'z'+ '_' .
digit  = '0'..'9'.
eol    = '\n'.

//________________________
TOKENS
integer    =  digit {digit}.
float      = ['+'|'-'] digit {digit} '.' digit {digit}.
scifloat   = ['+'|'-'] digit {digit} [ '.' digit {digit} ] ('E'|'e') ['+'|'-'] digit {digit} .
operator   = '+'|'-'|'*'|'/'|'^'|'<'|'>'.
eol        = '\n'.
ident      = letter {letter | digit | '_' | '.'}.

//________________________
IGNORE '\r' + eol + '\t'

$checkEOF=false // disable the end of file check

// =============================================================================
//                              PARSER RULES
// =============================================================================

PRODUCTIONS

//________________________
EVAL =
  (expression { expression }) (. _formula_->_finalize_(); .)
  .

expression =
    integer    (. _formula_->_push_number_((double)coco_atoi(t->val)); .)
    | float    (. _formula_->_push_number_((double)coco_atof(t->val)); .)
    | scifloat (. _formula_->_push_number_((double)coco_atof(t->val)); .)
    | operator (. _formula_->_push_operator_(narrow(t->val)[0]); .)
    | '('      (. _formula_->_push_leftParenthesis_(); .)
    | ')'      (. _formula_->_push_rightParenthesis_(); .)
    | ident    (. _formula_->_push_identifier_(narrow(t->val)); .)
    | ','      (. _formula_->_push_comma_(); .)
  .

END EVAL.
